<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
	xmlns:controls="clr-namespace:SimpleClocks.Controls"
	xmlns:local="clr-namespace:SimpleClocks.Borrowed.Xceed"
	xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
	xmlns:bcp="clr-namespace:SimpleClocks.Borrowed.PixiEditor.ColorPicker"
	xmlns:command="http://www.galasoft.ch/mvvmlight"
	xmlns:colorPicker="clr-namespace:ColorPicker;assembly=ColorPicker"
	xmlns:system="clr-namespace:System;assembly=mscorlib">

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="/Xceed.Wpf.Toolkit;component/colorcanvas/themes/generic.xaml" />
		<ResourceDictionary Source="/ColorPicker;component/Styles/DefaultColorPickerStyle.xaml" />
		<ResourceDictionary Source="/SimpleClocks;component/Resources/Styles/Common.xaml" />
		<ResourceDictionary Source="/SimpleClocks;component/Resources/Styles/DarkTextBoxStyle.xaml" />
		<ResourceDictionary Source="/SimpleClocks;component/Resources/Styles/ColorSlidersTabControl.xaml" />
	</ResourceDictionary.MergedDictionaries>

	<ControlTemplate x:Key="HorizontalSliderThumbTemplate" TargetType="{x:Type Thumb}">
		<Grid>
			<Grid.RowDefinitions>
				<RowDefinition Height="15" />
				<RowDefinition Height="Auto" />
			</Grid.RowDefinitions>
			<Line
				x:Name="VerLn"
				X1="0"
				Y1="0"
				X2="0"
				Y2="1"
				VerticalAlignment="Stretch"
				HorizontalAlignment="Center"
				Stretch="Fill"
				Stroke="White"
				StrokeDashArray="0 2"
				RenderOptions.EdgeMode="Aliased" UseLayoutRounding="True" SnapsToDevicePixels="True"
				StrokeThickness="1"
				StrokeDashCap="Round" />
			<Path
				Grid.Row="1"
				VerticalAlignment="Top"
				Data="M 0 6 L 0 10 L 9 10 L 9 6 L 5 0 L 4 0 Z"
				Fill="{TemplateBinding Foreground}"
			/>
		</Grid>
	</ControlTemplate>

	<Style x:Key="HorizontalSlideThumbStyle" TargetType="{x:Type Thumb}">
		<Setter Property="Focusable" Value="False" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Foreground" Value="AliceBlue" />
		<Setter Property="Template" Value="{StaticResource HorizontalSliderThumbTemplate}" />
		<Setter Property="Cursor" Value="Hand" />
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Foreground" Value="{StaticResource Accent}" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<ControlTemplate x:Key="ColorSpectrumSliderTemplate" TargetType="{x:Type local:ColorSpectrumSliderH}">
		<Grid>
			<Border
				Margin="3,0"
				BorderBrush="{TemplateBinding BorderThickness}"
				BorderThickness="{TemplateBinding BorderThickness}"
				VerticalAlignment="Top">
				<Border
					x:Name="PART_TrackBackground"
					Height="15">
					<Rectangle x:Name="PART_SpectrumDisplay" Stretch="Fill" HorizontalAlignment="Stretch" />
				</Border>
			</Border>
			<Track
				VerticalAlignment="Center"
				x:Name="PART_Track">
				<Track.DecreaseRepeatButton>
					<RepeatButton Command="Slider.DecreaseLarge" Style="{StaticResource SliderRepeatButtonStyle}" />
				</Track.DecreaseRepeatButton>
				<Track.IncreaseRepeatButton>
					<RepeatButton Command="Slider.IncreaseLarge" Style="{StaticResource SliderRepeatButtonStyle}" />
				</Track.IncreaseRepeatButton>
				<Track.Thumb>
					<Thumb Style="{StaticResource HorizontalSlideThumbStyle}" Margin="0,1,0,0"/>
				</Track.Thumb>
			</Track>
		</Grid>
	</ControlTemplate>

	<Style x:Key="{x:Type local:ColorSpectrumSliderH}" TargetType="{x:Type local:ColorSpectrumSliderH}">
		<Setter Property="BorderBrush" Value="#FFA9A9A9" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="SmallChange" Value="10" />
		<Setter Property="Orientation" Value="Horizontal" />
		<Setter Property="Background" Value="#00FFFFFF" />
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
		<Setter Property="Minimum" Value="0" />
		<Setter Property="Maximum" Value="360" />
		<Setter Property="TickFrequency" Value="0.001" />
		<Setter Property="IsSnapToTickEnabled" Value="True" />
		<Setter Property="IsDirectionReversed" Value="True" />
		<Setter Property="IsMoveToPointEnabled" Value="True" />
		<Setter Property="Value" Value="0" />
		<Setter Property="Template" Value="{StaticResource ColorSpectrumSliderTemplate}" />
	</Style>

	<Style x:Key="ExpandedColorCanvas" TargetType="{x:Type controls:ColorCanvasX}">
		<Setter Property="Background" Value="{StaticResource ColorCanvasBackgroundBrush}" />
		<Setter Property="BorderBrush" Value="{StaticResource ColorPickerDarkBorderBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:ColorCanvasX}">
					<Border
						Background="{TemplateBinding Control.Background}"
						BorderThickness="{TemplateBinding Control.BorderThickness}"
						BorderBrush="{TemplateBinding Control.BorderBrush}"
						Padding="3">
						<Grid Margin="2">
							<Grid.RowDefinitions>
								<RowDefinition Height="*" MinHeight="50"/>
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition Height="*" />
									<RowDefinition Height="Auto" />
								</Grid.RowDefinitions>
								<Border
									Margin="3,0"
									BorderThickness="1"
									BorderBrush="#FFA9A9A9"
									ClipToBounds="False"
									Background="{StaticResource CheckerBrush}">
									<Canvas
										x:Name="PART_ColorShadingCanvas"
										HorizontalAlignment="Stretch"
										VerticalAlignment="Stretch">
										<Rectangle
											x:Name="ColorShadingRectangle"
											Height="{Binding ElementName=PART_ColorShadingCanvas, Path=ActualHeight}"
											Width="{Binding ElementName=PART_ColorShadingCanvas, Path=ActualWidth}"
											Fill="{Binding SelectedColor, ElementName=PART_SpectrumSlider, Converter={StaticResource ColorToSolidColorBrushConverter}}" />
										<Rectangle
											x:Name="WhiteGradient"
											Width="{Binding ElementName=PART_ColorShadingCanvas, Path=ActualWidth}"
											Height="{Binding ElementName=PART_ColorShadingCanvas, Path=ActualHeight}">
											<Rectangle.Fill>
												<LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
													<GradientStop Offset="0" Color="#ffffffff" />
													<GradientStop Offset="1" Color="Transparent" />
												</LinearGradientBrush>
											</Rectangle.Fill>
										</Rectangle>
										<Rectangle
											x:Name="BlackGradient"
											Width="{Binding ElementName=PART_ColorShadingCanvas, Path=ActualWidth}"
											Height="{Binding ElementName=PART_ColorShadingCanvas, Path=ActualHeight}">
											<Rectangle.Fill>
												<LinearGradientBrush StartPoint="0,1" EndPoint="0, 0">
													<GradientStop Offset="0" Color="#ff000000" />
													<GradientStop Offset="1" Color="#00000000" />
												</LinearGradientBrush>
											</Rectangle.Fill>
										</Rectangle>
										<Canvas
											x:Name="PART_ColorShadeSelector"
											Width="10"
											Height="10"
											IsHitTestVisible="False">
											<Ellipse
												Width="10"
												Height="10"
												StrokeThickness="3"
												Stroke="#FFFFFFFF"
												IsHitTestVisible="False" />
											<Ellipse
												Width="10"
												Height="10"
												StrokeThickness="1"
												Stroke="#FF000000"
												IsHitTestVisible="False" />
										</Canvas>
									</Canvas>
								</Border>
								<Border
									Grid.Row="1"
									Margin="0,1,0,0"
									ClipToBounds="False">
									<local:ColorSpectrumSliderH
										x:Name="PART_SpectrumSlider"
										VerticalAlignment="Center"
										HorizontalAlignment="Stretch" />
								</Border>
							</Grid>
							<colorPicker:ColorSliders
								Grid.Row="1"
								Margin="0,3,0,0"
								VerticalAlignment="Bottom"
								Style="{StaticResource DefaultColorPickerStyle}"
								SelectedColor="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type xctk:ColorPicker}}, Path=SelectedColor, Mode=TwoWay}"
								ShowAlpha="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=UsingAlphaChannel, Mode=OneWay}">
								<colorPicker:ColorSliders.Resources>
									<Style TargetType="{x:Type TabControl}" BasedOn="{StaticResource ColorSlidersTabControl}" />
								</colorPicker:ColorSliders.Resources>
								<i:Interaction.Triggers>
									<i:EventTrigger EventName="Loaded">
										<command:EventToCommand
											PassEventArgsToCommand="True"
											Command="{Binding Source={x:Static bcp:ColorSlidersEx.UpdateTabsCommand}}"/>
									</i:EventTrigger>
								</i:Interaction.Triggers>
							</colorPicker:ColorSliders>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="UIElement.IsEnabled" Value="False">
							<Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
						</Trigger>
						<Trigger Value="{x:Null}" Property="xctk:ColorCanvas.SelectedColor">
							<Setter TargetName="PART_ColorShadeSelector" Property="UIElement.Visibility" Value="Collapsed" />
							<!--
							<Setter TargetName="RGBBorder" Property="UIElement.IsEnabled" Value="False" />
							<Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" TargetName="RGBBorder" Property="TextElement.Foreground" />
							-->
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>