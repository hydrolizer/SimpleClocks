<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:themes="clr-namespace:Xceed.Wpf.Toolkit.Themes;assembly=Xceed.Wpf.Toolkit.NET5"
	xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
	xmlns:system="clr-namespace:System;assembly=mscorlib">

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="/Xceed.Wpf.Toolkit.NET5;component/colorcanvas/themes/generic.xaml" />
	</ResourceDictionary.MergedDictionaries>

	<Color x:Key="AccentColor">#1ba1e2</Color>
	<SolidColorBrush x:Key="Accent" Color="{DynamicResource AccentColor}" />
	<BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

	<SolidColorBrush x:Key="ButtonBackground" Color="#333333" />
	<SolidColorBrush x:Key="ButtonBackgroundHover" Color="#3e3e42" />
	<SolidColorBrush x:Key="ButtonBackgroundPressed" Color="{DynamicResource AccentColor}" />
	<SolidColorBrush x:Key="ButtonBorder" Color="#333333" />
	<SolidColorBrush x:Key="ButtonBorderHover" Color="#3e3e42" />
	<SolidColorBrush x:Key="ButtonBorderPressed" Color="{DynamicResource AccentColor}" />
	<SolidColorBrush x:Key="ButtonText" Color="AliceBlue" />
	<SolidColorBrush x:Key="ButtonTextHover" Color="White" />
	<SolidColorBrush x:Key="ButtonTextPressed" Color="{StaticResource AccentColor}" />
	<SolidColorBrush x:Key="ButtonTextDisabled" Color="#808080" />

	<Style TargetType="{x:Type RepeatButton}" x:Key="SliderRepeatButtonStyleX">
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="VerticalAlignment" Value="Stretch" />
		<Setter Property="Height" Value="9" />
		<Setter Property="MinHeight" Value="9" />
		<Setter Property="Width" Value="17" />
		<Setter Property="MinWidth" Value="17" />
		<Setter Property="Background" Value="{StaticResource ButtonBackground}" />
		<Setter Property="Foreground" Value="{StaticResource ButtonText}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Border
						x:Name="border"
						Background="{TemplateBinding Background}"
						CornerRadius="0">
						<Grid Margin="2,2,1,2" x:Name="GlyphGrid">
							<Polyline
								x:Name="polyline"
								RenderOptions.EdgeMode="Aliased"
								Stretch="Uniform"
								Fill="{TemplateBinding Foreground}">
								<Polyline.Points>
									<Point X="0" Y="3" />
									<Point X="3" Y="0" />
									<Point X="6" Y="3" />
								</Polyline.Points>
							</Polyline>
							<ContentPresenter x:Name="content"/>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" Value="{StaticResource ButtonBackgroundHover}" />
							<Setter Property="BorderBrush" Value="{StaticResource ButtonBorderHover}"/>
							<Setter Property="Foreground" Value="{StaticResource ButtonTextHover}"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Background" Value="{DynamicResource ButtonBackgroundPressed}" />
							<Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderPressed}"/>
							<Setter Property="Foreground" Value="{DynamicResource ButtonTextPressed}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="polyline" Property="Fill" Value="{StaticResource ButtonTextDisabled}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="IsTabStop" Value="False" />
	</Style>

	<Style x:Key="{x:Type xctk:ButtonSpinner}" TargetType="{x:Type xctk:ButtonSpinner}">
		<Setter Property="Background" Value="{DynamicResource {x:Static themes:ResourceKeys.ControlNormalBackgroundKey}}" />
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:ResourceKeys.ControlNormalBorderKey}}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Focusable" Value="False" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="IsTabStop" Value="True" />
		<Setter Property="Padding" Value="1" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type xctk:ButtonSpinner}">
					<Border
						x:Name="Border"
						SnapsToDevicePixels="True"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition x:Name="firstContentColumn" Width="*" />
								<ColumnDefinition x:Name="secondContentColumn" Width="Auto" />
							</Grid.ColumnDefinitions>
							<ContentPresenter
								x:Name="contentPresenter"
								Focusable="False"
								Margin="{TemplateBinding Padding}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
							<Border
								DockPanel.Dock="Right"
								x:Name="SpinnersBorder"
								Grid.Column="1"
								BorderThickness="1,0,0,0"
								BorderBrush="{StaticResource ButtonBorder}">
								<Grid
									x:Name="gridContent"
									MinWidth="16"
									Width="{TemplateBinding SpinnerWidth}">
									<Grid.RowDefinitions>
										<RowDefinition />
										<RowDefinition Height="Auto" />
										<RowDefinition />
									</Grid.RowDefinitions>
									<RepeatButton
										x:Name="PART_IncreaseButton"
										Style="{StaticResource SliderRepeatButtonStyleX}" />
									<Line
										x:Name="ButtonsDivider"
										Grid.Row="1"
										X1="0"
										Y1="0"
										X2="1"
										Y2="0"
										VerticalAlignment="Center"
										HorizontalAlignment="Stretch"
										Stretch="Fill"
										Margin="0,0,-1,0"
										Stroke="#808080"
										RenderOptions.EdgeMode="Aliased" UseLayoutRounding="True" SnapsToDevicePixels="True"
										StrokeThickness="1" />
									<RepeatButton
										x:Name="PART_DecreaseButton"
										Grid.Row="2"
										Style="{StaticResource SliderRepeatButtonStyleX}"
										RenderTransformOrigin="0.5, 0.5">
										<RepeatButton.RenderTransform>
											<ScaleTransform ScaleY="-1" />
										</RepeatButton.RenderTransform>
									</RepeatButton>
								</Grid>
								<Border.Style>
									<Style TargetType="{x:Type Border}">
										<Style.Triggers>
											<DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SpinnerWidth}">
												<DataTrigger.Value>
													<system:Double>0</system:Double>
												</DataTrigger.Value>
												<Setter Property="Visibility" Value="Collapsed" />
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</Border.Style>
							</Border>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger SourceName="PART_IncreaseButton" Property="IsMouseOver" Value="True">
							<Setter TargetName="ButtonsDivider" Property="Stroke" Value="{DynamicResource {x:Static themes:ResourceKeys.ButtonMouseOverOuterBorderKey}}" />
							<Setter TargetName="SpinnersBorder" Property="BorderBrush" Value="{DynamicResource {x:Static themes:ResourceKeys.ButtonMouseOverOuterBorderKey}}" />
						</Trigger>
						<Trigger SourceName="PART_DecreaseButton" Property="IsMouseOver" Value="True">
							<Setter TargetName="ButtonsDivider" Property="Stroke" Value="{DynamicResource {x:Static themes:ResourceKeys.ButtonMouseOverOuterBorderKey}}" />
							<Setter TargetName="SpinnersBorder" Property="BorderBrush" Value="{DynamicResource {x:Static themes:ResourceKeys.ButtonMouseOverOuterBorderKey}}" />
						</Trigger>
						<Trigger SourceName="PART_IncreaseButton" Property="IsPressed" Value="True">
							<Setter TargetName="ButtonsDivider" Property="Stroke" Value="{DynamicResource {x:Static themes:ResourceKeys.ButtonPressedOuterBorderKey}}" />
							<Setter TargetName="SpinnersBorder" Property="BorderBrush" Value="{DynamicResource {x:Static themes:ResourceKeys.ButtonPressedOuterBorderKey}}" />
						</Trigger>
						<Trigger SourceName="PART_DecreaseButton" Property="IsPressed" Value="True">
							<Setter TargetName="ButtonsDivider" Property="Stroke" Value="{DynamicResource {x:Static themes:ResourceKeys.ButtonPressedOuterBorderKey}}" />
							<Setter TargetName="SpinnersBorder" Property="BorderBrush" Value="{DynamicResource {x:Static themes:ResourceKeys.ButtonPressedOuterBorderKey}}" />
						</Trigger>
						<Trigger
							Property="xctk:ButtonSpinner.ShowButtonSpinner"
							Value="False">
							<Setter
								TargetName="SpinnersBorder"
								Property="Visibility"
								Value="Collapsed" />
						</Trigger>
						<Trigger
							Property="xctk:ButtonSpinner.ShowSpinner"
							Value="False">
							<Setter
								TargetName="gridContent"
								Property="Visibility"
								Value="Collapsed" />
						</Trigger>
						<Trigger
							Property="IsEnabled"
							Value="False">
							<Setter
								Value="{DynamicResource {x:Static themes:ResourceKeys.ControlDisabledBackgroundKey}}"
								Property="Background" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>