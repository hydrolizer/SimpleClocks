<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:system="clr-namespace:System;assembly=mscorlib"
	xmlns:converters="clr-namespace:SimpleClocks.Utils.Converters"
	xmlns:simpleClocks="clr-namespace:SimpleClocks">

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="/SimpleClocks;component/Resources/Styles/Common.xaml" />
	</ResourceDictionary.MergedDictionaries>

	<system:Double x:Key="SystemButtonHeight">24</system:Double>
	<system:Double x:Key="SystemButtonWidth">32</system:Double>
	<system:Double x:Key="CloseButtonWidth">32</system:Double>
	<converters:DatabindingDebugConverter x:Key="DatabindingDebugConverter" />

	<SolidColorBrush x:Key="ButtonText" Color="#333333" />
	<Color x:Key="WindowBackgroundColor">#ffffff</Color>
	<SolidColorBrush x:Key="SystemButtonBackground" Color="{StaticResource WindowBackgroundColor}"  Opacity="0" />
	<SolidColorBrush x:Key="SystemButtonBackgroundOnMoseOver" Color="#dddddd" />
	<SolidColorBrush x:Key="SystemButtonForegroundOnMoseOver" Color="#333333" />
	<SolidColorBrush x:Key="SystemButtonBackgroundIsPressed" Color="{DynamicResource AccentColor}" />
	<SolidColorBrush x:Key="SystemButtonForegroundIsPressed" Color="White" />
	<SolidColorBrush x:Key="ButtonTextDisabled" Color="#a1a1a1" />
	<SolidColorBrush x:Key="CloseButtonBackground" Color="{StaticResource WindowBackgroundColor}"  Opacity="0" />
	<SolidColorBrush x:Key="CloseButtonBackgroundOnMoseOver" Color="#dddddd" />
	<SolidColorBrush x:Key="CloseButtonForegroundOnMoseOver" Color="#333333" />
	<SolidColorBrush x:Key="CloseButtonBackgroundIsPressed" Color="{DynamicResource AccentColor}" />
	<SolidColorBrush x:Key="CloseButtonForegroundIsPressed" Color="White" />

	<Style x:Key="SystemButtonBase" TargetType="ButtonBase">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ButtonBase}">
					<Border
						x:Name="Chrome"
						Background="{TemplateBinding Background}"
						BorderThickness="{TemplateBinding BorderThickness}"
						BorderBrush="{TemplateBinding BorderBrush}"
						SnapsToDevicePixels="true">
						<ContentPresenter
							Margin="{TemplateBinding Padding}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							RecognizesAccessKey="True"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="SystemButton" TargetType="ButtonBase" BasedOn="{StaticResource SystemButtonBase}">
		<Setter Property="Width" Value="{DynamicResource SystemButtonWidth}" />
		<Setter Property="Height" Value="{DynamicResource SystemButtonHeight}" />
		<Setter
			Property="Background"
			Value="{DynamicResource ClockButtonBackground}"/>
		<Setter
			Property="Foreground"
			Value="{DynamicResource ClockButtonForeground}"/>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter
					Property="Background"
					Value="{DynamicResource ClockButtonMouseOverBackground}"/>
				<Setter
					Property="Foreground"
					Value="{DynamicResource ClockButtonMouseOverForeground}"/>
			</Trigger>
			<Trigger Property="IsPressed" Value="True">
				<Setter
					Property="Background"
					Value="{DynamicResource ClockButtonPressedBackground}"/>
				<Setter
					Property="Foreground"
					Value="{DynamicResource ClockButtonPressedForeground}"/>
			</Trigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition
						Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type simpleClocks:MainWindow}}, Path=IsActive}"
						Value="{StaticResource KeyTrue}" />
					<Condition
						Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}"
						Value="{StaticResource KeyFalse}" />
					<Condition
						Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}"
						Value="{StaticResource KeyFalse}" />
				</MultiDataTrigger.Conditions>
				<Setter
					Property="Background"
					Value="{DynamicResource ActiveWindowClockButtonBackground}"/>
				<Setter
					Property="Foreground"
					Value="{DynamicResource ActiveWindowClockButtonForeground}"/>
			</MultiDataTrigger>
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Foreground" Value="{DynamicResource ButtonTextDisabled}" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="SystemCloseButton" TargetType="ButtonBase" BasedOn="{StaticResource SystemButton}">
		<Setter Property="Width" Value="{DynamicResource CloseButtonWidth}" />
		<Setter Property="Background" Value="{DynamicResource CloseButtonBackground}" />
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="{DynamicResource CloseButtonBackgroundOnMoseOver}" />
				<Setter Property="Foreground" Value="{DynamicResource CloseButtonForegroundOnMoseOver}"/>
			</Trigger>
			<Trigger Property="IsPressed" Value="True">
				<Setter Property="Background" Value="{DynamicResource CloseButtonBackgroundIsPressed}" />
				<Setter Property="Foreground" Value="{DynamicResource CloseButtonForegroundIsPressed}" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Foreground" Value="{DynamicResource ButtonTextDisabled}" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style TargetType="{x:Type ToggleButton}" x:Key="PinButtonStyle">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Foreground" Value="{DynamicResource ClockButtonForeground}"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="Width" Value="{DynamicResource SystemButtonWidth}" />
		<Setter Property="Height" Value="{DynamicResource SystemButtonHeight}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border
						x:Name="Chrome"
						Background="{TemplateBinding Background}"
						BorderThickness="{TemplateBinding BorderThickness}"
						BorderBrush="{TemplateBinding BorderBrush}"
						SnapsToDevicePixels="true">
						<Grid
							Margin="{TemplateBinding Padding}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
							<Grid
								x:Name="UncheckedContent"
								Width="16"
								Height="16">
								<Path
									RenderOptions.EdgeMode="Aliased"
									UseLayoutRounding="True"
									SnapsToDevicePixels="True"
									Width="16"
									Height="16"
									VerticalAlignment="Center"
									HorizontalAlignment="Center"
									Data="M0,0 L0,10 L4,10 L4,4 L10,4 L10,0 Z"
									Fill="{TemplateBinding Foreground}"
									Stroke="{TemplateBinding Foreground}"
									StrokeThickness="1" />
								<Path
									RenderOptions.EdgeMode="Aliased"
									UseLayoutRounding="True"
									SnapsToDevicePixels="True"
									Width="16"
									Height="16"
									VerticalAlignment="Center"
									HorizontalAlignment="Center"
									Data="M6,6 L6,15 L15,15 L15,6 Z"
									Stroke="{TemplateBinding Foreground}"
									StrokeThickness="1" />
							</Grid>
							<Grid
								x:Name="CheckedContent"
								Visibility="Collapsed"
								Width="16"
								Height="16">
								<Path
									RenderOptions.EdgeMode="Aliased"
									UseLayoutRounding="True"
									SnapsToDevicePixels="True"
									Width="16"
									Height="16"
									VerticalAlignment="Center"
									HorizontalAlignment="Center"
									Data="M0,0 L0,10 L10,10 L10,0 Z"
									Stroke="{TemplateBinding Foreground}"
									StrokeThickness="1" />
								<Path
									RenderOptions.EdgeMode="Aliased"
									UseLayoutRounding="True"
									SnapsToDevicePixels="True"
									Width="16"
									Height="16"
									VerticalAlignment="Center"
									HorizontalAlignment="Center"
									Data="M6,12 L6,15 L15,15 L15,6 L12,6 L12,12 Z"
									Fill="{TemplateBinding Foreground}"
									Stroke="{TemplateBinding Foreground}"
									StrokeThickness="1" />
							</Grid>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="True">
							<Setter TargetName="UncheckedContent" Property="Visibility" Value="Collapsed" />
							<Setter TargetName="CheckedContent" Property="Visibility" Value="Visible" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter
					Property="Background"
					Value="{DynamicResource ClockButtonMouseOverBackground}"/>
				<Setter
					Property="Foreground"
					Value="{DynamicResource ClockButtonMouseOverForeground}"/>
			</Trigger>
			<Trigger Property="IsPressed" Value="True">
				<Setter
					Property="Background"
					Value="{DynamicResource ClockButtonPressedBackground}"/>
				<Setter
					Property="Foreground"
					Value="{DynamicResource ClockButtonPressedForeground}"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Foreground" Value="{DynamicResource ButtonTextDisabled}" />
			</Trigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition
						Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type simpleClocks:MainWindow}}, Path=IsActive}"
						Value="{StaticResource KeyTrue}" />
					<Condition
						Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}"
						Value="{StaticResource KeyFalse}" />
					<Condition
						Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}"
						Value="{StaticResource KeyFalse}" />
				</MultiDataTrigger.Conditions>
				<Setter
					Property="Background"
					Value="{DynamicResource ActiveWindowClockButtonBackground}"/>
				<Setter
					Property="Foreground"
					Value="{DynamicResource ActiveWindowClockButtonForeground}"/>
			</MultiDataTrigger>
		</Style.Triggers>
	</Style>
</ResourceDictionary>